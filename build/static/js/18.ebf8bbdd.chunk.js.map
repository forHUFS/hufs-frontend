{"version":3,"sources":["components/map/reviewSection/reviewContainer/ItemListContainer.js","components/map/reviewSection/ItemList.js","components/map/reviewSection/reviewContainer/ItemRegisterContainer.js","components/map/reviewSection/ItemRegisterForm.js","components/map/reviewSection/ItemModifyForm.js","components/map/reviewSection/reviewContainer/ItemModifyContainer.js","components/map/reviewSection/ItemRead.js","components/map/reviewSection/reviewContainer/ItemReadContainer.js","views/ReviewPage/ReviewPage.js","components/map/exampleInfo/icon1.png","components/map/exampleInfo/icon2.png","views/MapInforPage/MapInforPage.js"],"names":["ItemListContainer","props","match","dispatch","useDispatch","useSelector","item","loading","items","isLoading","FETCH_ITEM_LIST","useEffect","fetchItemList","Title","Typography","Text","ItemList","params","id","title","score","history","useHistory","data","map","style","width","margin","paddingTop","length","columns","dataIndex","dataSource","bordered","level","onClick","push","pathname","path","state","location","withRouter","useLocation","onRegister","content","file","itemObject","formData","FormData","append","JSON","stringify","axios","post","headers","then","res","alert","catch","err","TextArea","Input","ItemRegisterForm","useState","setTitle","setScore","setContent","setFile","handleChangeTitle","useCallback","e","target","value","handleChangeContent","handleChangeFile","files","handleSubmit","preventDefault","maxWidth","onSubmit","type","onChange","allowHalf","rows","goBack","ItemModifyFrom","onModify","align","className","disabled","src","Date","getTime","alt","FETCH_ITEM","fetchItem","put","url","response","msg","ItemRead","onRemove","readOnly","to","a","removeItemApi","ReviewPage","component","exact","ItemRegisterContainer","ItemModifyContainer","ItemReadContainer","InforPage","setVlue","description","numAddress","img","numIcon","roadAddress","roadIcon","name","itemLayout","renderItem","Item","Meta","avatar"],"mappings":"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","file":"static/js/18.ebf8bbdd.chunk.js","sourcesContent":["import ItemList from '../ItemList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport {\n  fetchItemList,\n  FETCH_ITEM_LIST,\n} from '../../../../_actions/reviewPost_action';\n\nconst ItemListContainer = (props, { match }) => {\n  // useDispatch: 컴포넌트 내부에서 스토어의 내장 함수 dispatch를 사용할 수 있게 해주는 hook 이다.\n  // useSelector: connect 함수를 대신하여 스토어 상태를 조회\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(({ item, loading }) => ({\n    items: item.items,\n    isLoading: loading[FETCH_ITEM_LIST],\n  }));\n\n  // 브라우저 상에 컴포넌트가 나타날 때 음식 목록을 조회하는 함수를 실행\n  useEffect(() => {\n    dispatch(fetchItemList());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ItemList\n        items={items}\n        isLoading={isLoading}\n        match={props.match}\n        props={props}\n      />\n    </>\n  );\n};\n\nexport default ItemListContainer;\n","import { Link, useHistory } from 'react-router-dom';\nimport { Table, Empty, Button, List, Avatar, Card, Typography } from 'antd';\n\nconst { Text, Title } = Typography;\n\nexport default function ItemList({ items, isLoading, match, props }) {\n  const { params } = props.match;\n  items = [\n    {\n      id: 1,\n      title: '안녕',\n      score: 2,\n    },\n    {\n      id: 2,\n      title: '하세요',\n      score: 3,\n    },\n  ];\n  const history = useHistory();\n  const columns = [\n    {\n      title: 'index',\n      dataIndex: 'id',\n    },\n    {\n      title: '제목',\n      dataIndex: 'title',\n      //render: text => <Link to={`/read/${item.id}`} className=\"board-title\">{text}</Link>,\n    },\n    {\n      title: '평점',\n      dataIndex: 'score',\n    },\n  ];\n\n  const data = items.map((item) => ({\n    id: item.id,\n    title: item.title,\n    score: item.score,\n  }));\n\n  return (\n    <div style={{ width: '800px', margin: '0 auto', paddingTop: '150px' }}>\n      {isLoading && '로딩중...'}\n      {!isLoading && items && (\n        <>\n          {/*<Link to={`${match.url}/register`} className=\"btn-link\">새로 만들기</Link>*/}\n          {!items.length && <Empty />}\n          {\n            !!items.length && (\n              <Table\n                columns={columns}\n                dataSource={data}\n                bordered\n                title={() => <Title level={2}>리뷰 목록</Title>}\n              />\n            )\n            /*{items.map(item => (\n                                \n                                <tr key={item.id}>\n                                    <td align=\"center\">{item.id}</td>\n                                    <td align=\"left\">\n                                        <Link to={`/read/${item.id}`} className=\"board-title\">{item.title}</Link>\n                                    </td>\n                                    <td align=\"right\">{item.score}</td>\n                                </tr>\n                            ))*/\n          }\n        </>\n      )}\n      <Button\n        onClick={() =>\n          history.push({\n            pathname: `${match.path}/register`,\n            state: { id: props.location.state.id },\n          })\n        }\n      >\n        Write Review\n      </Button>\n    </div>\n  );\n}\n","import ReviewPage from '../ItemRegisterForm';\nimport axios from 'axios';\n//import {useHistory,withRouter,useLocation } from 'react-router-dom';\n\n/*\nwithRouter 함수는 High-order component이다. \n라우트로 사용된 컴포넌트가 아니어도 match, location, history 객체에 접근할 수 있게 한다.\n컴포넌트 속성값으로 match, location, history 객체를 전달받는다.\n*/\nimport { withRouter, useHistory, useLocation } from 'react-router-dom';\n\nconst ItemRegisterContainer = ({ history, match }) => {\n  const location = useLocation();\n  // console.log(match)\n  // console.log(\"itemregister\",location);\n  const onRegister = ({ title, score, content, file }) => {\n    const itemObject = {\n      title,\n      score,\n      content,\n    };\n\n    // FormData 객체 생성\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('item', JSON.stringify(itemObject));\n\n    // 파일 업로드\n    axios\n      .post(\n        `http://52.78.2.40:8080/store/${location.state.id}/review`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        },\n      )\n      .then((res) => {\n        alert('등록되었습니다.');\n        history.push(`${match.path}/read` + res.data.id);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  return <ReviewPage onRegister={onRegister} match={match} />;\n};\n\nexport default withRouter(ItemRegisterContainer);\n","import { Link, useHistory } from 'react-router-dom';\nimport React, { useState, useCallback } from 'react';\nimport { Rate, Form, Input, InputNumber, Button } from 'antd';\nconst { TextArea } = Input;\n\nexport default function ItemRegisterForm({ onRegister, match }) {\n  const [title, setTitle] = useState('');\n  const [score, setScore] = useState(0);\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n\n  // 음식명이 사용자의 입력에 의해 변경되면 itemName 상태값을 변경한다.\n  const handleChangeTitle = useCallback((e) => {\n    setTitle(e.target.value);\n  }, []);\n\n  // 가격이 사용자의 입력에 변경되면 price 설정 함수를 호출한다.\n  /*\n  const handleChangeScore = useCallback((e) => {\n    setScore(e.currentTarget);\n  }, []);*/\n  const handleChangeScore = (score) => {\n    setScore(score);\n  };\n\n  // 음식 설명\n  const handleChangeContent = useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  // 업로드 파일\n  const handleChangeFile = useCallback((e) => {\n    setFile(e.target.files[0]);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      onRegister({ title, score, content, file });\n    },\n    [onRegister, title, score, content, file],\n  );\n\n  return (\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n      <form onSubmit={handleSubmit}>\n        <br />\n        <div style={{ maxWidth: '700px', margin: '2rem' }}>\n          <label>제목 </label>\n          <Input type=\"text\" value={title} onChange={handleChangeTitle} />\n          <hr></hr>\n          <label>평점 </label>\n          <Rate allowHalf value={score} onChange={handleChangeScore} />\n          <hr></hr>\n          <label>사진</label>\n          <Input type=\"file\" onChange={handleChangeFile} />\n          <hr></hr>\n          <label>후기</label>\n          <TextArea rows=\"5\" value={content} onChange={handleChangeContent} />\n        </div>\n        <div>\n          <button type=\"submit\">등록</button>\n          &nbsp;\n          <Button onClick={() => history.goBack()}>취소</Button>&nbsp;\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { Link, useHistory } from 'react-router-dom';\nimport { Rate } from 'antd';\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// 이미지 표시 URL 생성\nconst pictureUrl = (id) => {\n  return `/items/display?id=${id}&timestamp=${new Date().getTime()}`;\n};\n\nexport default function ItemModifyFrom({ item, isLoading, onModify, match }) {\n  const history = useHistory();\n\n  const [title, setTitle] = useState('');\n  const [score, setScore] = useState(0);\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    if (item) {\n      setTitle(item.title);\n      setScore(item.score);\n      setContent(item.content);\n    }\n  }, [item]);\n\n  const handleChangeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleChangeContent = useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  const handleChangeScore = (e) => {\n    setScore(e.target.value);\n  };\n\n  const handleChangeFile = useCallback((e) => {\n    setFile(e.target.files[0]);\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onModify(title, score, content, file);\n  };\n\n  return (\n    <div align=\"center\">\n      <h2>수정</h2>\n      {isLoading && '로딩중...'}\n      {!isLoading && item && (\n        <form onSubmit={handleSubmit}>\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"form-label\">번호</td>\n                <td>\n                  <input type=\"text\" value={item.id} disabled />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식이름</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={title}\n                    onChange={handleChangeTitle}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식 평점</td>\n                <td>\n                  <Rate allowHalf value={score} onChange={handleChangeScore} />\n                  {/*\n                                <select value={score} onChange={handleChangeScore}>\n                  <option value=\"1pt\">1점</option>\n                  <option value=\"2pt\">2점</option>\n                  <option value=\"3pt\">3점</option>\n                  <option value=\"4pt\">4점</option>\n                  <option value=\"5pt\">5점</option>\n                                    </select>*/}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식파일</td>\n                <td>\n                  <input type=\"file\" onChange={handleChangeFile} />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">미리보기</td>\n                <td>\n                  <img\n                    src={pictureUrl(item.id)}\n                    alt=\"\"\n                    width=\"200\"\n                    className=\"img-preview\"\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식설명</td>\n                <td>\n                  <textarea\n                    rows=\"5\"\n                    value={content}\n                    onChange={handleChangeContent}\n                  ></textarea>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <div>\n            <button type=\"submit\" className=\"like-a-button\">\n              수정\n            </button>\n            &nbsp;\n            <button onClick={() => history.goBack()}>취소</button>&nbsp;\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n","import ItemModifyForm from '../ItemModifyForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { fetchItem, FETCH_ITEM } from '../../../../_actions/reviewPost_action';\nimport axios from 'axios';\n\nconst ItemModifyContainer = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const { item, isLoading } = useSelector(({ item, loading }) => ({\n    item: item.item,\n    isLoading: loading[FETCH_ITEM],\n  }));\n\n  const { id } = match.params;\n\n  const onModify = (title, score, content, file) => {\n    const itemObject = {\n      id: id,\n      title: title,\n      score: score,\n      content: content,\n    };\n\n    const formData = new FormData();\n\n    formData.append('file', file);\n    formData.append('item', JSON.stringify(itemObject));\n\n    axios\n      .put(`http://52.78.2.40:8080/store/review/${id}`, formData, {\n        headers: {\n          'Content-type': 'multipart/form-data',\n        },\n      })\n      .then((res) => {\n        alert('수정되었습니다.');\n        history.push(`${match.url}/${id}`);\n      })\n      .catch((err) => {\n        alert(err.response.data.msg);\n      });\n  };\n\n  useEffect(() => {\n    dispatch(fetchItem(id));\n  }, [dispatch, id]);\n\n  return (\n    <ItemModifyForm\n      item={item}\n      isLoading={isLoading}\n      onModify={onModify}\n      match={match}\n    />\n  );\n};\n\nexport default withRouter(ItemModifyContainer); // component 속성을 통해 history 객체에 접근하기 위해\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ItemRead({ id, item, isLoading, onRemove, match }) {\n  // 이미지 표시 URL 생성\n  const pictureUrl = () => {\n    return `/items/display?id=${id}&timestamp=${new Date().getTime()}`;\n  };\n\n  return (\n    <div align=\"center\">\n      <h2 className=\"title\">음식 상세보기</h2>\n      {isLoading && '로딩중....'}\n      {!isLoading && item && (\n        <>\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"form-label\">음식번호</td>\n                <td>\n                  <input type=\"text\" value={item.id} readOnly />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식명</td>\n                <td>\n                  <input type=\"text\" value={item.title} readOnly />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식 평점</td>\n                <td>\n                  <input type=\"text\" value={item.score} readOnly />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">미리보기</td>\n                <td>\n                  <img\n                    src={pictureUrl()}\n                    alt=\"음식 이미지\"\n                    width=\"200\"\n                    className=\"img-preview\"\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td className=\"form-label\">음식 설명</td>\n                <td>\n                  <textarea value={item.content} readOnly></textarea>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </>\n      )}\n      <Link to={`${match.path}/edit/${id}`} className=\"like-a-button\">\n        편집\n      </Link>\n      &nbsp;\n      <button onClick={onRemove} className=\"like-a-button danger\">\n        삭제\n      </button>\n      &nbsp;\n      <Link to={`${match.path}`} className=\"like-a-button\">\n        목록\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ItemRead from '../ItemRead';\nimport { fetchItem, FETCH_ITEM } from '../../../../_actions/reviewPost_action';\n\n// 컴포넌트 속성을 통해 hisotry 객체를 접근하기 위해 불러온다.\nimport { withRouter } from 'react-router-dom';\n\nimport { removeItemApi } from '../api';\n\nconst ItemReadContainer = ({ match, history }) => {\n  // match 객체의 params 속성값 참조\n  const { id } = match.params;\n  // console.log(match.params, id)\n\n  // useDispatch()는 컴포넌트 내부에서 스토어의 내장함수 dispatch를 사용할 수 있게 해주는 훅이다.\n  const dispatch = useDispatch();\n\n  // useSelector Hook을 사용하면 connect 함수를 대신하여 스토어 상태를 조회할 수 있다.\n  const { item, isLoading } = useSelector(({ item, loading }) => ({\n    item: item.item,\n    isLoading: loading[FETCH_ITEM],\n  }));\n\n  // 인자로 전달받은 삭제할 음식의 음식아이디를 서버 API에 전달하고 삭제가 성공적으로 이루어지면 삭제 완료 메시지 표시\n  // 삭제 완료 메시지 확인 후 음식 목록 페이지로 이동\n  const onRemove = async () => {\n    try {\n      await removeItemApi(id);\n      alert('삭제되었습니다.');\n      history.push(`${match.url}/ReviewPage`);\n    } catch (e) {\n      // console.log(e)\n    }\n  };\n\n  // 브라우저 상에서 컴포넌트가 나타날 때 음식 상세정보를 가져오는 액션을 실행한다.\n  useEffect(() => {\n    dispatch(fetchItem(id));\n    // console.log(dispatch, fetchItem, FETCH_ITEM)\n  }, [dispatch, id]);\n\n  // console.log(item, isLoading )\n\n  return (\n    <ItemRead id={id} item={item} isLoading={isLoading} onRemove={onRemove} />\n  );\n};\n\n// withRouter 함수 사용 시 컴포넌트 속성값으로 match, location, history가 전달된다.\nexport default withRouter(ItemReadContainer);\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from 'react-router-dom';\nimport ItemListContainer from '../../components/map/reviewSection/reviewContainer/ItemListContainer';\nimport ItemRegisterContainer from '../../components/map/reviewSection/reviewContainer/ItemRegisterContainer';\nimport ItemModifyContainer from '../../components/map/reviewSection/reviewContainer/ItemModifyContainer';\nimport ItemReadContainer from '../../components/map/reviewSection/reviewContainer/ItemReadContainer';\n\nfunction ReviewPage(props) {\n  return (\n    <Router>\n      <div className=\"main-bg-wrapper\">\n        <div className=\"main-bg\"></div>\n        <div className=\"main-container\">\n          <Switch>\n            <Route\n              component={ItemListContainer}\n              path={`${props.match.url}`}\n              exact\n            />\n            <Route\n              component={ItemRegisterContainer}\n              path={`${props.match.url}/register`}\n              exact\n            />\n            <Route\n              component={ItemModifyContainer}\n              path={`${props.match.url}/edit/:id`}\n              exact\n            />\n            <Route\n              component={ItemReadContainer}\n              path={`${props.match.url}/read/:id`}\n              exact\n            />\n          </Switch>{' '}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default ReviewPage;\n","export default __webpack_public_path__ + \"static/media/icon1.e5f37642.png\";","export default __webpack_public_path__ + \"static/media/icon2.2dff31df.png\";","import React, { useState, useEffect } from 'react';\nimport { useLocation, Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { List, Avatar, Card, Button, Typography } from 'antd';\nimport numIcon from '../../components/map/exampleInfo/icon1.png';\nimport roadIcon from '../../components/map/exampleInfo/icon2.png';\n//import StarPage from '../../components/map/reviewSection/starRating/StarPage';\nimport 'antd/dist/antd.css';\n\nimport ReviewPage from '../ReviewPage/ReviewPage';\n\nimport ItemRegisterFrom from '../../components/map/reviewSection/ItemRegisterForm';\nimport ItemList from '../../components/map/reviewSection/ItemList.js';\n\nimport ItemListContainer from '../../components/map/reviewSection/reviewContainer/ItemListContainer';\nimport ItemRegisterContainer from '../../components/map/reviewSection/reviewContainer/ItemRegisterContainer';\nimport ItemModifyContainer from '../../components/map/reviewSection/reviewContainer/ItemModifyContainer';\nimport ItemReadContainer from '../../components/map/reviewSection/reviewContainer/ItemReadContainer';\n/*\nimport ReviewPostView from '../../components/map/reviewSection/ReviewPostView';\nimport ReviewPostList from '../../components/map/reviewSection/ReviewPostList';\n*/\n\nconst { Text, Title } = Typography;\n\nconst InforPage = ({ match, history, props }) => {\n  const { value, setVlue } = useState(0);\n  const [state, setState] = useState('');\n\n  const location = useLocation();\n\n  const data = [\n    {\n      title: '지번주소',\n      description: location.state.numAddress,\n      img: numIcon,\n    },\n    {\n      title: '도로명주소',\n      description: location.state.roadAddress,\n      img: roadIcon,\n    },\n  ];\n\n  const handleChange = (e) => {\n    // map/info -> map/info/:name 24시해장국\n    history.push({\n      // map/info/:name/24시해장국/reviewpage\n      pathname: `${match.url}/ReviewPage`,\n      state: {\n        id: match.params.id,\n      },\n    });\n  };\n  /*\n  useEffect(() => {\n    console.log(history.location.state);\n    fetch(`../../components/exampleInfo/store-seoul.json`)\n      .then((res) => res.json)\n      .then((res) => setState({ state: res })); \n  }, []);\n  */\n\n  return (\n    /* jshint ignore:start */\n    <div style={{ width: '400px', margin: '0 auto', paddingTop: '150px' }}>\n      <div>\n        <Title level={3}>{location.state.name}</Title>\n      </div>\n      <div>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={data}\n          renderItem={(item) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src={item.img} />}\n                title={item.title}\n                description={item.description}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n\n      <div>\n        <Button\n          onClick={(e) => {\n            // map/info -> map/info/:name 24시해장국\n            history.push({\n              // map/info/:name/24시해장국/reviewpage\n              pathname: `${match.url}/ReviewPage`,\n              state: {\n                id: match.params.id,\n              },\n            });\n          }}\n        >\n          리뷰 보러가기\n        </Button>\n        {/*<ItemListContainer/>*/}\n      </div>\n      <div>\n        {/*\n        <Switch>\n          <Route\n            exact\n            path={`${match.path}`}\n            component={ReviewPostList}\n          />\n          */}\n        {/*\n          <Route\n            path={`${match.path}/info/${match.params.name}/:item`}\n            component={ReviewPostView}\n          />\n        </Switch>\n          */}\n      </div>\n    </div>\n    /* jshint ignore:end */\n  );\n};\n\nexport default InforPage;\n"],"sourceRoot":""}