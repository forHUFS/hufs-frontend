{"version":3,"sources":["_actions/post_action.js","components/post/PostEdit.js"],"names":["postView","postId","a","axios","get","PUBLIC_URL","request","status","type","POST_VIEW","payload","data","POST_VIEW_FAIL","postList","match","path","POST_LIST","POST_LIST_FAIL","postReport","body","post","POST_REPORT","POST_REPORT_FAIL","postSave","needDelete","boardId","length","url","POST_SAVE","POST_SAVE_FAIL","error","postUpdate","updated","put","POST_UPDATE","POST_UPDATE_FAIL","postRemove","delete","POST_REMOVE","POST_REMOVE_FAIL","postLike","POST_LIKE","POST_LIKE_FAIL","postDellike","POST_DELLIKE","POST_DELLIKE_FAIL","postScrap","params","POST_SCRAP","POST_SCRAP_FAIL","deleteScrap","id","POST_SCRAP_REMOVE","POST_SCRAP_REMOVE_FAIL","uploadedImg","withRouter","props","dispatch","useDispatch","useBeforeunload","e","preventDefault","window","onunload","useState","title","content","value","setvalue","onSubmit","submittedImg","Array","from","DOMParser","parseFromString","querySelectorAll","map","img","getAttribute","unused","i","splice","indexOf","getUnused","location","state","detail","substring","then","response","history","goBack","catch","alert","push","className","placeholder","onChange","target","theme","delta","source","editor","getHTML","modules","formats","onClick","style","margin","toolbar","container","header","list","indent","handlers","image","fileInput","this","querySelector","document","createElement","setAttribute","classList","add","addEventListener","files","formData","FormData","append","range","quill","getSelection","console","log","insertEmbed","index","concat","setSelection","Quill","sources","SILENT","enable","appendChild","click"],"mappings":"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","file":"static/js/27.e611c1c4.chunk.js","sourcesContent":["import axios from 'axios';\nimport { PUBLIC_URL } from '../config';\nimport {\n  POST_REPORT,\n  POST_LIST,\n  POST_LIST_FAIL,\n  POST_REMOVE,\n  POST_SAVE,\n  POST_LIKE,\n  POST_UPDATE,\n  POST_REPORT_FAIL,\n  POST_SAVE_FAIL,\n  POST_REMOVE_FAIL,\n  POST_LIKE_FAIL,\n  POST_UPDATE_FAIL,\n  POST_SCRAP,\n  POST_SCRAP_FAIL,\n  POST_SCRAP_REMOVE,\n  POST_SCRAP_REMOVE_FAIL,\n  POST_DELLIKE,\n  POST_DELLIKE_FAIL,\n  POST_VIEW_FAIL,\n  POST_VIEW,\n} from './types';\n// 완료\nexport const postView = async (postId) => {\n  const request = await axios.get(`${PUBLIC_URL}/post/${postId}`);\n\n  if (request.status === 200) {\n    return {\n      type: POST_VIEW,\n      payload: request.data.data, // 객체\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_VIEW_FAIL,\n      status: request.status,\n    };\n  }\n};\n// 완료\nexport const postList = async (match) => {\n  const request = await axios.get(`${PUBLIC_URL}/board${match.path}`);\n  if (request.status === 200) {\n    return {\n      type: POST_LIST,\n      payload: request.data.data, // 배열\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_LIST_FAIL,\n      status: request.status,\n    };\n  }\n};\n//완료\nexport const postReport = async (postId, body) => {\n  const request = await axios //body : postId, content, detail\n    .post(`${PUBLIC_URL}/post/${postId}/report`, body);\n  if (request.status === 200) {\n    return {\n      type: POST_REPORT,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_REPORT_FAIL,\n      status: request.status,\n    };\n  }\n};\n// 완료\nexport const postSave = async (body, needDelete, boardId) => {\n  const request = await axios.post(`${PUBLIC_URL}/board/${boardId}/post`, body);\n\n  if (needDelete.length !== 0) {\n    await axios.post(`${PUBLIC_URL}/post/back`, { url: needDelete });\n  }\n  if (request.status === 200) {\n    return {\n      type: POST_SAVE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_SAVE_FAIL,\n      status: request.error,\n    };\n  }\n};\n// 완료\nexport const postUpdate = async (updated, needDelete, postId) => {\n  const request = await axios.put(`${PUBLIC_URL}/post/${postId}`, updated);\n\n  if (needDelete.length !== 0) {\n    await axios.post(`${PUBLIC_URL}/post/back`, { url: needDelete });\n  }\n  if (request.status === 200) {\n    return {\n      type: POST_UPDATE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_UPDATE_FAIL,\n      status: request.status,\n    };\n  }\n};\n// 완료\nexport const postRemove = async (postId) => {\n  const request = await axios.delete(`${PUBLIC_URL}/post/${postId}`);\n  if (request.status === 200) {\n    return {\n      type: POST_REMOVE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_REMOVE_FAIL,\n      status: request.status,\n    };\n  }\n};\n// 완료\nexport const postLike = async (postId) => {\n  const request = await axios.get(`${PUBLIC_URL}/post/${postId}/addlike`);\n  if (request.status === 200) {\n    return {\n      type: POST_LIKE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_LIKE_FAIL,\n      status: request.status,\n    };\n  }\n};\nexport const postDellike = async (postId) => {\n  const request = await axios.get(`${PUBLIC_URL}/post/${postId}/dellike`);\n  if (request.status === 200) {\n    return {\n      type: POST_DELLIKE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_DELLIKE_FAIL,\n      status: request.status,\n    };\n  }\n};\n\n// request  query로 보내야하는데..\n// 스웨거 request URL은 맞춤 , 500\nexport const postScrap = async (postId) => {\n  const request = await axios.post(`${PUBLIC_URL}/user/scrap`, null, {\n    params: { postId: postId },\n  });\n  if (request.status === 200) {\n    return {\n      type: POST_SCRAP,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_SCRAP_FAIL,\n      status: request.status,\n    };\n  }\n};\n\n// id가 스크랩 아이디라서 조금 다른데 해결필요\nexport const deleteScrap = async (postId) => {\n  const request = await axios.delete(`${PUBLIC_URL}/user/scrap`, null, {\n    params: { id: postId },\n  });\n  if (request.status === 200) {\n    return {\n      type: POST_SCRAP_REMOVE,\n      status: request.status,\n    };\n  } else {\n    return {\n      type: POST_SCRAP_REMOVE_FAIL,\n      status: request.status,\n    };\n  }\n};\n","import React, { useState } from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport { useDispatch } from 'react-redux';\nimport 'react-quill/dist/quill.snow.css';\nimport { postSave } from '../../_actions/post_action';\nimport { useBeforeunload } from 'react-beforeunload';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { PUBLIC_URL } from '../../config';\nimport Header from '../../views/Header/Header';\nimport Quick from '../../views/Quick/Quick';\nimport Footer from '../../views/Footer/Footer';\nimport { Button } from 'antd';\n\nlet uploadedImg = [];\nfunction PostEdit(props) {\n  const dispatch = useDispatch();\n  useBeforeunload((e) => {\n    e.preventDefault();\n    window.onunload = function () {\n      axios.delete(`${PUBLIC_URL}/post/back`, uploadedImg);\n    };\n  });\n\n  const [value, setvalue] = useState({ title: '', content: '' });\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let submittedImg = Array.from(\n      new DOMParser()\n        .parseFromString(value.content, 'text/html')\n        .querySelectorAll('img'),\n    ).map((img) => img.getAttribute('src'));\n\n    const needDelete = getUnused(uploadedImg, submittedImg); // return : 삭제해야 할 이미지 url\n    let boardId = props.location.state.detail;\n    let body = {\n      title: value.title,\n      content: value.content,\n    };\n    dispatch(postSave(body, needDelete, boardId.substring(1)))\n      .then((response) => {\n        if (response.status === 200) {\n          props.history.goBack();\n        }\n      })\n      .catch((error) => {\n        switch (error.response?.status) {\n          case 401:\n            alert('로그인이 필요합니다.');\n            props.history.push('/');\n          case 403:\n            alert('접근 권한 오류');\n            props.history.push('/');\n            break;\n          default:\n            break;\n        }\n      });\n  };\n  const onExit = () => {\n    const answer = window.confirm(\n      '작성하던 글은 저장되지 않습니다. 그래도 나가시겠습니까?',\n    );\n    if (answer) {\n      axios\n        .delete(`${PUBLIC_URL}/post/back`, uploadedImg)\n        .then(props.history.goBack())\n        .catch(props.history.goBack());\n    }\n  };\n\n  return (\n    <>\n      <div id=\"community-main\">\n        <input\n          className=\"title-bar\"\n          type=\"text\"\n          placeholder=\"제목\"\n          value={value.title}\n          onChange={(e) => {\n            setvalue({ ...value, title: e.target.value });\n          }}\n        />\n        <ReactQuill\n          placeholder=\"하이\"\n          theme=\"snow\"\n          onChange={(content, delta, source, editor) => {\n            setvalue({ ...value, content: editor.getHTML() });\n          }}\n          modules={modules}\n          formats={formats}\n        ></ReactQuill>\n\n        <div id=\"button-bar\">\n          <Button type=\"primary\" onClick={onSubmit} style={{\n            margin: '10px'\n          }}>제출</Button>\n          <Button type=\"primary\" onClick={onSubmit} style={{\n            margin: '10px'\n          }}>취소</Button>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(PostEdit);\n\nconst myToolbar = [\n  [{ header: [1, 2, false] }],\n  ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n  [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n  ['image'],\n];\nconst modules = {\n  toolbar: {\n    container: myToolbar,\n    handlers: { image: imageHandler },\n  },\n};\nconst formats = [\n  'header',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n];\n\nfunction imageHandler() {\n  let fileInput = this.container.querySelector('input.ql-image[type=file]');\n\n  if (fileInput == null) {\n    fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute(\n      'accept',\n      'image/png, image/gif, image/jpeg, image/bmp, image/x-icon',\n    );\n    fileInput.classList.add('ql-image');\n    fileInput.addEventListener('change', async () => {\n      const files = fileInput.files;\n      const formData = new FormData();\n\n      formData.append('file', files[0]);\n\n      const range = this.quill.getSelection(true);\n\n      if (!files || !files.length) {\n        console.log('No files selected');\n        return;\n      }\n\n      // // 테스트 공간 base64로 출력\n      // let reader = new FileReader();\n      // reader.readAsDataURL(files[0]);\n      // reader.onload = () => {\n      //   this.quill.insertEmbed(range.index, 'image', reader.result);\n      // };\n      //\n\n      // this.quill.enable(false);\n\n      await axios\n        .post(`${PUBLIC_URL}/post/img`, { img: formData })\n        .then((response) => {\n          this.quill.editor.insertEmbed(range.index, 'image', response.data);\n          uploadedImg = uploadedImg.concat(response.data);\n\n          this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n          fileInput.value = '';\n        })\n        .catch((error) => {\n          console.log(error);\n          this.quill.enable(true);\n        });\n    });\n    this.container.appendChild(fileInput);\n  }\n  fileInput.click();\n}\n\nfunction getUnused(uploadedImg, submittedImg) {\n  const unused = uploadedImg;\n  for (let i = 0; i < submittedImg.length; i++) {\n    unused.splice(unused.indexOf(submittedImg[i]), 1);\n  }\n  return unused;\n}\n"],"sourceRoot":""}